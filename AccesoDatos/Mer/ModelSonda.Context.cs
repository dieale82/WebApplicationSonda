//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos.Mer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SondaEntities : DbContext
    {
        public SondaEntities()
            : base("name=SondaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CitasMedicas> CitasMedicas { get; set; }
        public virtual DbSet<Especialidades> Especialidades { get; set; }
        public virtual DbSet<EspecialidadMedico> EspecialidadMedico { get; set; }
        public virtual DbSet<Medicos> Medicos { get; set; }
    
        public virtual ObjectResult<Nullable<int>> SP_GuardarCitaMedica(Nullable<int> idMedico, Nullable<int> idEspecialidad, Nullable<System.DateTime> fechaCitaMedica, string nombrePaciente)
        {
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("idMedico", idMedico) :
                new ObjectParameter("idMedico", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("idEspecialidad", idEspecialidad) :
                new ObjectParameter("idEspecialidad", typeof(int));
    
            var fechaCitaMedicaParameter = fechaCitaMedica.HasValue ?
                new ObjectParameter("fechaCitaMedica", fechaCitaMedica) :
                new ObjectParameter("fechaCitaMedica", typeof(System.DateTime));
    
            var nombrePacienteParameter = nombrePaciente != null ?
                new ObjectParameter("nombrePaciente", nombrePaciente) :
                new ObjectParameter("nombrePaciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GuardarCitaMedica", idMedicoParameter, idEspecialidadParameter, fechaCitaMedicaParameter, nombrePacienteParameter);
        }
    }
}
